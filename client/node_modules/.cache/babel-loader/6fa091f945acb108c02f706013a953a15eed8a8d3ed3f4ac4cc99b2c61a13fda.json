{"ast":null,"code":"var _jsxFileName = \"D:\\\\project\\\\client\\\\src\\\\ModalComponent.js\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport ToDoItem from './TodoItem';\nimport InputArea from './InputArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ModalComponent(p) {\n  _s2();\n  var _s = $RefreshSig$();\n  const MydModalWithGrid = props => {\n    _s();\n    const [items, setItems] = useState([{}]);\n    function addItem(inputText) {\n      if (!inputText) {\n        alert(\"Please add a todo\");\n      } else {\n        setItems(prevItems => {\n          console.log(prevItems);\n          return [...prevItems, {\n            inputText\n          }];\n        });\n      }\n    }\n    function addnote() {\n      console.log(\"HIi\");\n      p.addToDos(items);\n      setItems([]);\n    }\n    function deleteItem(id) {\n      setItems(prevItems => {\n        return prevItems.filter((item, index) => {\n          return index !== id;\n        });\n      });\n    }\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      ...props,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Add a todo list:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        className: \"show-grid\",\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"form\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(InputArea, {\n                onAdd: addItem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), items.map((todoItem, index) => /*#__PURE__*/_jsxDEV(ToDoItem, {\n            text: todoItem.inputText,\n            onChecked: todoItem.deleteItem\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 14\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            addnote();\n            props.onHide();\n          },\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }, this);\n  };\n  _s(MydModalWithGrid, \"CC3S1sJNx1OxsnS5qGvyMWv+v+A=\");\n  console.log(p);\n  const [modalShow, setModalShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: () => setModalShow(true),\n        children: \"Launch modal with grid\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(MydModalWithGrid, {\n        show: modalShow,\n        onHide: () => setModalShow(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 4\n  }, this);\n}\n_s2(ModalComponent, \"xuPPltV/3J92+XaNotdpXxySp+I=\");\n_c = ModalComponent;\nexport default ModalComponent;\nvar _c;\n$RefreshReg$(_c, \"ModalComponent\");","map":{"version":3,"names":["React","useState","Button","Col","Container","Modal","Row","ToDoItem","InputArea","jsxDEV","_jsxDEV","Fragment","_Fragment","ModalComponent","p","_s2","_s","$RefreshSig$","MydModalWithGrid","props","items","setItems","addItem","inputText","alert","prevItems","console","log","addnote","addToDos","deleteItem","id","filter","item","index","children","Header","closeButton","Title","fileName","_jsxFileName","lineNumber","columnNumber","Body","className","xs","md","onAdd","map","todoItem","text","onChecked","Footer","onClick","onHide","modalShow","setModalShow","variant","show","_c","$RefreshReg$"],"sources":["D:/project/client/src/ModalComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ToDoItem from './TodoItem';\r\nimport InputArea from './InputArea';\r\n \r\n\r\n\r\n\r\n\r\n\r\nfunction ModalComponent(p){\r\n\r\n\r\nconst  MydModalWithGrid = (props) => {\r\n\r\nconst [items, setItems] = useState([{}]);\r\n  function addItem(inputText) {\r\n   if(!inputText){\r\nalert(\"Please add a todo\");\r\n}\r\nelse \r\n{    setItems(prevItems => {\r\n        console.log(prevItems)\r\n      return [...prevItems, {inputText}];\r\n    });}\r\n   \r\n   \r\n  }\r\nfunction addnote(){\r\nconsole.log(\"HIi\");\r\np.addToDos(items);\r\nsetItems([]);\r\n\r\n}\r\n  function deleteItem(id) {\r\n    setItems(prevItems => {\r\n      return prevItems.filter((item, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  }\r\n  return (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\">\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n         Add a todo list:\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"show-grid\">\r\n        <Container>\r\n          <Row className='form'>\r\n            <Col xs={12} md={12}>\r\n         <InputArea onAdd={addItem} />\r\n            </Col>\r\n          </Row>\r\n           \r\n            { items.map((todoItem, index) => (\r\n             \r\n             <ToDoItem\r\n              key={index}\r\n              text={todoItem.inputText}\r\n              onChecked={todoItem.deleteItem}\r\n            />\r\n          ))}\r\n          \r\n        </Container>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={() =>{ addnote(); props.onHide()}}>Add</Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n  }\r\n\r\nconsole.log(p);\r\n\r\nconst [modalShow, setModalShow] = useState(false);\r\nreturn (\r\n   <div>\r\n    <>\r\n      <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n        Launch modal with grid\r\n      </Button>\r\n\r\n      <MydModalWithGrid show={modalShow} onHide={() => setModalShow(false)}  />\r\n    \r\n    </>\r\n   \r\n  </div>\r\n\r\n)}\r\nexport default ModalComponent\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}