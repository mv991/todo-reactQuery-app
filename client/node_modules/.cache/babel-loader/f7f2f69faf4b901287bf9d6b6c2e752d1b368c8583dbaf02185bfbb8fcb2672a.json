{"ast":null,"code":"var _jsxFileName = \"D:\\\\NotesApp\\\\client\\\\src\\\\components\\\\ModalComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Modal from 'react-bootstrap/Modal';\nimport Row from 'react-bootstrap/Row';\nimport ToDoItem from './TodoItem';\nimport InputArea from './InputArea';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport { postToDb } from '../api/CreateToDo';\nimport './Modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ModalComponent(p) {\n  _s();\n  const [items, setItems] = useState([]);\n  const [modalShow, setModalShow] = useState(false);\n  function addItem(title) {\n    if (!title) {\n      alert(\"Please add a todo\");\n    } else {\n      setItems(prevItems => {\n        return [...prevItems, {\n          title: title,\n          completed: false\n        }];\n      });\n    }\n  }\n  function deleteItem(id) {\n    setItems(prevItems => {\n      return prevItems.filter((item, index) => {\n        return index !== id;\n      });\n    });\n  }\n  const queryClient = useQueryClient();\n  const addTodoMutation = useMutation({\n    mutationFn: postToDb,\n    onMutate: async newTodo => {\n      await queryClient.cancelQueries({\n        queryKey: ['todos']\n      });\n      const previousTodos = queryClient.getQueryData(['todos']);\n      queryClient.setQueryData(['todos'], old => [...old, {\n        todos: [...newTodo]\n      }]);\n      return {\n        previousTodos\n      };\n    },\n    // If the mutation fails,\n    // use the context returned from onMutate to roll back\n    onError: (err, newTodo, context) => {\n      queryClient.setQueryData(['todos'], context.previousTodos);\n    },\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['todos']\n      });\n    }\n  });\n  function addnote(items) {\n    if (items.length === 0) {\n      alert(\"Todo List cannot be empty\");\n    } else {\n      addTodoMutation.mutate(items);\n    }\n  }\n  ;\n  const MydModalWithGrid = props => {\n    return /*#__PURE__*/_jsxDEV(Modal, {\n      ...props,\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            className: \"heading\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \" Add a todo list:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          className: \"show-grid\",\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            className: \"form\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              xs: 12,\n              md: 12,\n              children: /*#__PURE__*/_jsxDEV(InputArea, {\n                onAdd: addItem\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [items.map((todoItem, index) => /*#__PURE__*/_jsxDEV(ToDoItem, {\n              id: index,\n              text: todoItem.title,\n              onChecked: deleteItem\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 14\n            }, this)), \";\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              addnote(items);\n              props.onHide();\n            },\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addButton\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-dark\",\n      onClick: () => setModalShow(true),\n      children: \"+ Add  new Todo's\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MydModalWithGrid, {\n      show: modalShow,\n      onHide: () => setModalShow(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 4\n  }, this);\n}\n_s(ModalComponent, \"gpUw1szBjI8YQxKNOAnRRjJ373o=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = ModalComponent;\nexport default ModalComponent;\nvar _c;\n$RefreshReg$(_c, \"ModalComponent\");","map":{"version":3,"names":["React","useState","Button","Col","Container","Modal","Row","ToDoItem","InputArea","useMutation","useQueryClient","postToDb","jsxDEV","_jsxDEV","ModalComponent","p","_s","items","setItems","modalShow","setModalShow","addItem","title","alert","prevItems","completed","deleteItem","id","filter","item","index","queryClient","addTodoMutation","mutationFn","onMutate","newTodo","cancelQueries","queryKey","previousTodos","getQueryData","setQueryData","old","todos","onError","err","context","onSettled","invalidateQueries","addnote","length","mutate","MydModalWithGrid","props","children","Header","closeButton","Title","className","fileName","_jsxFileName","lineNumber","columnNumber","Body","xs","md","onAdd","map","todoItem","text","onChecked","Footer","onClick","onHide","variant","show","_c","$RefreshReg$"],"sources":["D:/NotesApp/client/src/components/ModalComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ToDoItem from './TodoItem';\r\nimport InputArea from './InputArea';\r\nimport {useMutation,useQueryClient}  from '@tanstack/react-query';\r\nimport {postToDb } from '../api/CreateToDo';\r\nimport './Modal.css';\r\n\r\n\r\n\r\nfunction ModalComponent(p){\r\n  const [items, setItems] = useState([]);\r\n  const [modalShow, setModalShow] = useState(false);\r\n\r\nfunction addItem(title) {\r\n  if(!title){alert(\"Please add a todo\");}\r\n  else {setItems(prevItems => {\r\n      return [...prevItems, {title:title, completed:false,}];});}}\r\n\r\n function deleteItem(id) {\r\n    setItems(prevItems => {\r\n      return prevItems.filter((item, index) => {\r\n        return index !== id;\r\n      });\r\n    });\r\n  }\r\n  \r\n  const queryClient = useQueryClient();\r\n  \r\n  const addTodoMutation = useMutation({\r\n    mutationFn:  postToDb,\r\n    onMutate: async (newTodo) => {\r\n     await queryClient.cancelQueries({ queryKey: ['todos'] })\r\n     const previousTodos = queryClient.getQueryData(['todos'])\r\n    queryClient.setQueryData(['todos'], (old) => [...old, {todos:[...newTodo]}])\r\n    return { previousTodos }\r\n  },\r\n  // If the mutation fails,\r\n  // use the context returned from onMutate to roll back\r\n  onError: (err, newTodo, context) => {\r\n    queryClient.setQueryData(['todos'], context.previousTodos)\r\n  },\r\n  // Always refetch after error or success:\r\n  onSettled: () => {\r\n    queryClient.invalidateQueries({ queryKey: ['todos'] })\r\n  },\r\n})\r\n\r\nfunction addnote(items) {\r\n  if(items.length===0) {\r\n    alert(\"Todo List cannot be empty\")\r\n  }\r\n  else {\r\n    addTodoMutation.mutate(items)\r\n  }\r\n  \r\n  };\r\nconst  MydModalWithGrid = (props) => {   \r\n\r\nreturn (\r\n    <Modal {...props} aria-labelledby=\"contained-modal-title-vcenter\" >\r\n      <Container>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\" className='heading'>\r\n        <h1> Add a todo list:</h1>\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body className=\"show-grid\">\r\n        \r\n          <Row className='form'>\r\n            <Col xs={12} md={12}>\r\n         <InputArea onAdd={addItem} />\r\n            </Col>\r\n          </Row>\r\n           <Row>\r\n            { items.map((todoItem, index) => (\r\n             \r\n             <ToDoItem\r\n              id = {index}\r\n              key={index}\r\n              text={todoItem.title}\r\n                onChecked={deleteItem}\r\n                \r\n            />\r\n          ))};\r\n          </Row>\r\n        \r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button onClick={() =>{ addnote(items); props.onHide()}}>Add</Button>\r\n      </Modal.Footer>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n            }\r\nreturn (\r\n   <div className='addButton'>\r\n    \r\n      <Button variant=\"outline-dark\" onClick={() => setModalShow(true)}>\r\n      + Add  new Todo's \r\n      </Button>\r\n\r\n      <MydModalWithGrid show={modalShow} onHide={() => setModalShow(false)}  />\r\n    \r\n    \r\n   \r\n  </div>\r\n\r\n)}\r\nexport default ModalComponent\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}