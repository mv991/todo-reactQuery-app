{"ast":null,"code":"var _jsxFileName = \"D:\\\\TodoProject\\\\client\\\\src\\\\Note.js\";\nimport React from \"react\";\nimport { deleteFromDb } from './api/DeleteToDO';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Note(props) {\n  var _s = $RefreshSig$();\n  function handleClick(item) {}\n  const deletePost = async postId => {\n    return await axios.delete(`http://localhost:8000/${id}`);\n  };\n  const Post = _ref => {\n    _s();\n    let {\n      post,\n      onDelete\n    } = _ref;\n    const [deleteMutation] = useMutation(deletePost, {\n      optimisticUpdater: queryCache => {\n        // Update the query data to reflect the expected changes\n        queryCache.removeQueries(['todos', todo.id]);\n      },\n      onSettled: () => {\n        // Call the onDelete callback after the mutation is complete\n        onDelete(post.id);\n      }\n    });\n    const addTodoDeletion = () => {\n      // Call the delete mutation to delete the post\n      deleteMutation(post.id);\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note\",\n      children: [props.note.map(item => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => {\n              handleClick(item);\n            },\n            children: item.title\n          }, item._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 16\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          addTodoDeletion.mutate(props.id);\n        },\n        children: \"DELETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this);\n  };\n  _s(Post, \"5SLlAj++63BAL+SxjW7rE1Vui4M=\", false, function () {\n    return [useMutation];\n  });\n}\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","deleteFromDb","useMutation","useQueryClient","axios","jsxDEV","_jsxDEV","Note","props","_s","$RefreshSig$","handleClick","item","deletePost","postId","delete","id","Post","_ref","post","onDelete","deleteMutation","optimisticUpdater","queryCache","removeQueries","todo","onSettled","addTodoDeletion","className","children","note","map","onClick","title","_id","fileName","_jsxFileName","lineNumber","columnNumber","mutate","_c","$RefreshReg$"],"sources":["D:/TodoProject/client/src/Note.js"],"sourcesContent":["import React from \"react\";\r\nimport {deleteFromDb} from './api/DeleteToDO';\r\nimport {useMutation,useQueryClient}  from '@tanstack/react-query';\r\nimport axios from 'axios';\r\n\r\nfunction Note(props) {\r\n\r\n  function handleClick(item) {}\r\n \r\n  const deletePost = async (postId) => {\r\n    return await axios.delete(`http://localhost:8000/${id}`)\r\n  }\r\n  \r\n  const Post = ({ post, onDelete }) => {\r\n    const [deleteMutation] = useMutation(deletePost, {\r\n      optimisticUpdater: (queryCache) => {\r\n        // Update the query data to reflect the expected changes\r\n        queryCache.removeQueries(['todos', todo.id]);\r\n      },\r\n      onSettled: () => {\r\n        // Call the onDelete callback after the mutation is complete\r\n        onDelete(post.id);\r\n      },\r\n    });\r\n  \r\n    const addTodoDeletion = () => {\r\n      // Call the delete mutation to delete the post\r\n      deleteMutation(post.id);\r\n    };\r\n\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      {  props.note.map((item) => {\r\n        return <ul> <li onClick={() => {handleClick(item)}} key={item._id}>{item.title}</li></ul>\r\n      })}\r\n      <button onClick={() => {addTodoDeletion.mutate(props.id)}}>DELETE</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n}\r\nexport default Note;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,YAAY,QAAO,kBAAkB;AAC7C,SAAQC,WAAW,EAACC,cAAc,QAAQ,uBAAuB;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAEnB,SAASC,WAAWA,CAACC,IAAI,EAAE,CAAC;EAE5B,MAAMC,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,OAAO,MAAMV,KAAK,CAACW,MAAM,CAAE,yBAAwBC,EAAG,EAAC,CAAC;EAC1D,CAAC;EAED,MAAMC,IAAI,GAAGC,IAAA,IAAwB;IAAAT,EAAA;IAAA,IAAvB;MAAEU,IAAI;MAAEC;IAAS,CAAC,GAAAF,IAAA;IAC9B,MAAM,CAACG,cAAc,CAAC,GAAGnB,WAAW,CAACW,UAAU,EAAE;MAC/CS,iBAAiB,EAAGC,UAAU,IAAK;QACjC;QACAA,UAAU,CAACC,aAAa,CAAC,CAAC,OAAO,EAAEC,IAAI,CAACT,EAAE,CAAC,CAAC;MAC9C,CAAC;MACDU,SAAS,EAAEA,CAAA,KAAM;QACf;QACAN,QAAQ,CAACD,IAAI,CAACH,EAAE,CAAC;MACnB;IACF,CAAC,CAAC;IAEF,MAAMW,eAAe,GAAGA,CAAA,KAAM;MAC5B;MACAN,cAAc,CAACF,IAAI,CAACH,EAAE,CAAC;IACzB,CAAC;IAGH,oBACEV,OAAA;MAAKsB,SAAS,EAAC,MAAM;MAAAC,QAAA,GAChBrB,KAAK,CAACsB,IAAI,CAACC,GAAG,CAAEnB,IAAI,IAAK;QAC1B,oBAAON,OAAA;UAAAuB,QAAA,GAAI,GAAC,eAAAvB,OAAA;YAAI0B,OAAO,EAAEA,CAAA,KAAM;cAACrB,WAAW,CAACC,IAAI,CAAC;YAAA,CAAE;YAAAiB,QAAA,EAAiBjB,IAAI,CAACqB;UAAK,GAArBrB,IAAI,CAACsB,GAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAmB;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK;MAC3F,CAAC,CAAC,eACFhC,OAAA;QAAQ0B,OAAO,EAAEA,CAAA,KAAM;UAACL,eAAe,CAACY,MAAM,CAAC/B,KAAK,CAACQ,EAAE,CAAC;QAAA,CAAE;QAAAa,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtE;EAEV,CAAC;EAAA7B,EAAA,CA1BOQ,IAAI;IAAA,QACiBf,WAAW;EAAA;AA2BxC;AAACsC,EAAA,GApCQjC,IAAI;AAqCb,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}