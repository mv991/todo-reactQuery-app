{"ast":null,"code":"var _jsxFileName = \"D:\\\\TodoProject\\\\client\\\\src\\\\Note.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { deleteFromDb } from './api/DeleteToDO';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ListItemIcon } from \"@mui/material\";\nimport { updateToDo } from './api/UpdateToDo';\n\n// const [mutation] = useMutation(({data: elements}) => console.log(elements));\n// mutation({data: [1,2,3]});\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Note(props) {\n  _s();\n  const update = useMutation({\n    mutationFn: updateToDo,\n    // When mutate is called:\n    onMutate: async data => {\n\n      // Cancel any outgoing refetches\n      // (so they don't overwrite our optimistic update)\n    }\n  });\n  function handleClick(item, pid) {\n    console.log(item);\n    item.completed = !item.completed;\n    console.log(item);\n    update.mutate({\n      data: [item, pid]\n    });\n  }\n  const queryClient = useQueryClient();\n  const addTodoMutation = useMutation({\n    mutationFn: deleteFromDb,\n    onMutate: async id => {\n      await queryClient.cancelQueries({\n        queryKey: ['todos']\n      });\n      const previousTodos = queryClient.getQueryData(['todos']);\n      queryClient.setQueryData(['todos'], old => old.filter(t => t._id !== id));\n      return {\n        previousTodos\n      };\n    },\n    onError: (err, newTodo, context) => {\n      queryClient.setQueryData(['todos'], context.previousTodos);\n    },\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['todos']\n      });\n    }\n  });\n  const handleDelete = id => {\n    addTodoMutation.mutate(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [props.note.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            textDecoration: item.completed ? \"line-through\" : \"none\"\n          },\n          onClick: () => {\n            handleClick(item, props.id);\n          },\n          children: [item.title, \" \"]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: props.id ? false : true,\n      onClick: () => {\n        handleDelete(props.id);\n      },\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 89\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(Note, \"O3bWDWdQiq2oPULa+7A6cduFVFE=\", false, function () {\n  return [useMutation, useQueryClient, useMutation];\n});\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","deleteFromDb","useMutation","useQueryClient","DeleteIcon","ListItemIcon","updateToDo","jsxDEV","_jsxDEV","Note","props","_s","update","mutationFn","onMutate","data","handleClick","item","pid","console","log","completed","mutate","queryClient","addTodoMutation","id","cancelQueries","queryKey","previousTodos","getQueryData","setQueryData","old","filter","t","_id","onError","err","newTodo","context","onSettled","invalidateQueries","handleDelete","className","children","note","map","style","textDecoration","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["D:/TodoProject/client/src/Note.js"],"sourcesContent":["import React from \"react\";\r\nimport {deleteFromDb} from './api/DeleteToDO';\r\nimport {useMutation,useQueryClient}  from '@tanstack/react-query';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ListItemIcon } from \"@mui/material\";\r\nimport {updateToDo} from './api/UpdateToDo'\r\n\r\n\r\n// const [mutation] = useMutation(({data: elements}) => console.log(elements));\r\n// mutation({data: [1,2,3]});\r\nfunction Note(props) {\r\n \r\n  const update = useMutation({\r\n    mutationFn: updateToDo,\r\n    // When mutate is called:\r\n    onMutate: async (data) => {\r\n    \r\n      // Cancel any outgoing refetches\r\n      // (so they don't overwrite our optimistic update)\r\n    }})\r\n\r\n  function handleClick(item,pid) {\r\n    console.log(item)\r\n    item.completed = !(item.completed);\r\n    console.log(item)\r\n    update.mutate({data:[item,pid]})\r\n  }\r\n  \r\n  const queryClient = useQueryClient();\r\n  const addTodoMutation = useMutation({\r\n    mutationFn:  deleteFromDb,\r\n    onMutate: async (id) => {\r\n     await queryClient.cancelQueries({ queryKey: ['todos'] })\r\n     const previousTodos = queryClient.getQueryData(['todos'])\r\n    queryClient.setQueryData(['todos'], (old) => old.filter(t => t._id!==id))\r\n    return { previousTodos }\r\n  }, \r\n  onError: (err, newTodo, context) => {\r\n    queryClient.setQueryData(['todos'], context.previousTodos)\r\n  },\r\n  // Always refetch after error or success:\r\n  onSettled: () => {\r\n    queryClient.invalidateQueries({ queryKey: ['todos'] })\r\n    \r\n\r\n  },\r\n\r\n})\r\n  \r\nconst handleDelete = (id) => {\r\n  addTodoMutation.mutate(id)\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      {  props.note.map((item) => {\r\n        return <ul> <li style = {{textDecoration:item.completed?\"line-through\":\"none\"}}  onClick={() => {handleClick(item,props.id)}} key={item._id} >{item.title} </li></ul>\r\n      })}\r\n      <button disabled = {props.id?false:true} onClick={() => {handleDelete(props.id)}}><DeleteIcon /></button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Note;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}