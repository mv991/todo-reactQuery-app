{"ast":null,"code":"var _jsxFileName = \"D:\\\\TodoProject\\\\client\\\\src\\\\Note.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { deleteFromDb } from './api/DeleteToDO';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ListItemIcon } from \"@mui/material\";\nimport { updateToDo } from './api/UpdateToDo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Note(props) {\n  _s();\n  console.log(props);\n  const update = useMutation({\n    mutationFn: updateToDo,\n    // When mutate is called:\n    onMutate: async id => {\n      // Cancel any outgoing refetches\n      // (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries({\n        queryKey: ['todos', id]\n      });\n\n      // Snapshot the previous value\n      const previousTodo = queryClient.getQueryData(['todos', id]);\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(['todos', id]);\n\n      // Return a context with the previous and new todo\n      return {\n        previousTodo\n      };\n    },\n    // If the mutation fails, use the context we returned above\n    onError: (err, newTodo, context) => {\n      queryClient.setQueryData(['todos', context.newTodo.id], context.previousTodo);\n    },\n    // Always refetch after error or success:\n    onSettled: newTodo => {\n      queryClient.invalidateQueries({\n        queryKey: ['todos', newTodo.id]\n      });\n    }\n  });\n  function handleClick(item) {\n    console.log(item);\n    item.completed = !item.completed;\n    console.log(item);\n    update.mutate(item.id);\n  }\n  const queryClient = useQueryClient();\n  const addTodoMutation = useMutation({\n    mutationFn: deleteFromDb,\n    onMutate: async id => {\n      await queryClient.cancelQueries({\n        queryKey: ['todos']\n      });\n      const previousTodos = queryClient.getQueryData(['todos']);\n      queryClient.setQueryData(['todos'], old => old.filter(t => t._id !== id));\n      return {\n        previousTodos\n      };\n    },\n    onError: (err, newTodo, context) => {\n      queryClient.setQueryData(['todos'], context.previousTodos);\n    },\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['todos']\n      });\n    }\n  });\n  const handleDelete = id => {\n    addTodoMutation.mutate(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [props.note.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            textDecoration: item.completed ? \"line-through\" : \"none\"\n          },\n          onClick: () => {\n            handleClick(item);\n          },\n          children: item.title\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: props.id ? false : true,\n      onClick: () => {\n        handleDelete(props.id);\n      },\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 89\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Note, \"O3bWDWdQiq2oPULa+7A6cduFVFE=\", false, function () {\n  return [useMutation, useQueryClient, useMutation];\n});\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","deleteFromDb","useMutation","useQueryClient","DeleteIcon","ListItemIcon","updateToDo","jsxDEV","_jsxDEV","Note","props","_s","console","log","update","mutationFn","onMutate","id","queryClient","cancelQueries","queryKey","previousTodo","getQueryData","setQueryData","onError","err","newTodo","context","onSettled","invalidateQueries","handleClick","item","completed","mutate","addTodoMutation","previousTodos","old","filter","t","_id","handleDelete","className","children","note","map","style","textDecoration","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["D:/TodoProject/client/src/Note.js"],"sourcesContent":["import React from \"react\";\r\nimport {deleteFromDb} from './api/DeleteToDO';\r\nimport {useMutation,useQueryClient}  from '@tanstack/react-query';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ListItemIcon } from \"@mui/material\";\r\nimport {updateToDo} from './api/UpdateToDo'\r\n\r\n\r\n\r\nfunction Note(props) {\r\n\r\n  \r\n console.log(props)\r\n \r\n  const update = useMutation({\r\n    mutationFn: updateToDo,\r\n    // When mutate is called:\r\n    onMutate: async (id) => {\r\n      // Cancel any outgoing refetches\r\n      // (so they don't overwrite our optimistic update)\r\n      await queryClient.cancelQueries({ queryKey: ['todos', id] })\r\n  \r\n      // Snapshot the previous value\r\n      const previousTodo = queryClient.getQueryData(['todos', id])\r\n  \r\n      // Optimistically update to the new value\r\n      queryClient.setQueryData(['todos', id])\r\n  \r\n      // Return a context with the previous and new todo\r\n      return { previousTodo }\r\n    },\r\n    // If the mutation fails, use the context we returned above\r\n    onError: (err, newTodo, context) => {\r\n      queryClient.setQueryData(\r\n        ['todos', context.newTodo.id],\r\n        context.previousTodo,\r\n      )\r\n    },\r\n    // Always refetch after error or success:\r\n    onSettled: (newTodo) => {\r\n      queryClient.invalidateQueries({ queryKey: ['todos', newTodo.id] })\r\n    },\r\n  })\r\n\r\n  function handleClick(item) {\r\n    console.log(item)\r\n    item.completed = !(item.completed);\r\n    console.log(item)\r\n    update.mutate(item.id)\r\n  }\r\n  const queryClient = useQueryClient();\r\n  const addTodoMutation = useMutation({\r\n    mutationFn:  deleteFromDb,\r\n    onMutate: async (id) => {\r\n     await queryClient.cancelQueries({ queryKey: ['todos'] })\r\n     const previousTodos = queryClient.getQueryData(['todos'])\r\n    queryClient.setQueryData(['todos'], (old) => old.filter(t => t._id!==id))\r\n    return { previousTodos }\r\n  }, \r\n  onError: (err, newTodo, context) => {\r\n    queryClient.setQueryData(['todos'], context.previousTodos)\r\n  },\r\n  // Always refetch after error or success:\r\n  onSettled: () => {\r\n    queryClient.invalidateQueries({ queryKey: ['todos'] })\r\n    \r\n\r\n  },\r\n\r\n})\r\n  \r\nconst handleDelete = (id) => {\r\n  addTodoMutation.mutate(id)\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      {  props.note.map((item) => {\r\n        return <ul> <li style = {{textDecoration:item.completed?\"line-through\":\"none\"}} onClick={() => {handleClick(item)}} key={item._id}>{item.title}</li></ul>\r\n      })}\r\n      <button disabled = {props.id?false:true} onClick={() => {handleDelete(props.id)}}><DeleteIcon /></button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Note;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,YAAY,QAAO,kBAAkB;AAC7C,SAAQC,WAAW,EAACC,cAAc,QAAQ,uBAAuB;AACjE,OAAOC,UAAU,MAAM,4BAA4B;AACnD,SAASC,YAAY,QAAQ,eAAe;AAC5C,SAAQC,UAAU,QAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAI3C,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAGpBC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;EAEjB,MAAMI,MAAM,GAAGZ,WAAW,CAAC;IACzBa,UAAU,EAAET,UAAU;IACtB;IACAU,QAAQ,EAAE,MAAOC,EAAE,IAAK;MACtB;MACA;MACA,MAAMC,WAAW,CAACC,aAAa,CAAC;QAAEC,QAAQ,EAAE,CAAC,OAAO,EAAEH,EAAE;MAAE,CAAC,CAAC;;MAE5D;MACA,MAAMI,YAAY,GAAGH,WAAW,CAACI,YAAY,CAAC,CAAC,OAAO,EAAEL,EAAE,CAAC,CAAC;;MAE5D;MACAC,WAAW,CAACK,YAAY,CAAC,CAAC,OAAO,EAAEN,EAAE,CAAC,CAAC;;MAEvC;MACA,OAAO;QAAEI;MAAa,CAAC;IACzB,CAAC;IACD;IACAG,OAAO,EAAEA,CAACC,GAAG,EAAEC,OAAO,EAAEC,OAAO,KAAK;MAClCT,WAAW,CAACK,YAAY,CACtB,CAAC,OAAO,EAAEI,OAAO,CAACD,OAAO,CAACT,EAAE,CAAC,EAC7BU,OAAO,CAACN,YAAY,CACrB;IACH,CAAC;IACD;IACAO,SAAS,EAAGF,OAAO,IAAK;MACtBR,WAAW,CAACW,iBAAiB,CAAC;QAAET,QAAQ,EAAE,CAAC,OAAO,EAAEM,OAAO,CAACT,EAAE;MAAE,CAAC,CAAC;IACpE;EACF,CAAC,CAAC;EAEF,SAASa,WAAWA,CAACC,IAAI,EAAE;IACzBnB,OAAO,CAACC,GAAG,CAACkB,IAAI,CAAC;IACjBA,IAAI,CAACC,SAAS,GAAG,CAAED,IAAI,CAACC,SAAU;IAClCpB,OAAO,CAACC,GAAG,CAACkB,IAAI,CAAC;IACjBjB,MAAM,CAACmB,MAAM,CAACF,IAAI,CAACd,EAAE,CAAC;EACxB;EACA,MAAMC,WAAW,GAAGf,cAAc,EAAE;EACpC,MAAM+B,eAAe,GAAGhC,WAAW,CAAC;IAClCa,UAAU,EAAGd,YAAY;IACzBe,QAAQ,EAAE,MAAOC,EAAE,IAAK;MACvB,MAAMC,WAAW,CAACC,aAAa,CAAC;QAAEC,QAAQ,EAAE,CAAC,OAAO;MAAE,CAAC,CAAC;MACxD,MAAMe,aAAa,GAAGjB,WAAW,CAACI,YAAY,CAAC,CAAC,OAAO,CAAC,CAAC;MAC1DJ,WAAW,CAACK,YAAY,CAAC,CAAC,OAAO,CAAC,EAAGa,GAAG,IAAKA,GAAG,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,GAAG,KAAGtB,EAAE,CAAC,CAAC;MACzE,OAAO;QAAEkB;MAAc,CAAC;IAC1B,CAAC;IACDX,OAAO,EAAEA,CAACC,GAAG,EAAEC,OAAO,EAAEC,OAAO,KAAK;MAClCT,WAAW,CAACK,YAAY,CAAC,CAAC,OAAO,CAAC,EAAEI,OAAO,CAACQ,aAAa,CAAC;IAC5D,CAAC;IACD;IACAP,SAAS,EAAEA,CAAA,KAAM;MACfV,WAAW,CAACW,iBAAiB,CAAC;QAAET,QAAQ,EAAE,CAAC,OAAO;MAAE,CAAC,CAAC;IAGxD;EAEF,CAAC,CAAC;EAEF,MAAMoB,YAAY,GAAIvB,EAAE,IAAK;IAC3BiB,eAAe,CAACD,MAAM,CAAChB,EAAE,CAAC;EAC5B,CAAC;EAIC,oBACET,OAAA;IAAKiC,SAAS,EAAC,MAAM;IAAAC,QAAA,GAChBhC,KAAK,CAACiC,IAAI,CAACC,GAAG,CAAEb,IAAI,IAAK;MAC1B,oBAAOvB,OAAA;QAAAkC,QAAA,GAAI,GAAC,eAAAlC,OAAA;UAAIqC,KAAK,EAAI;YAACC,cAAc,EAACf,IAAI,CAACC,SAAS,GAAC,cAAc,GAAC;UAAM,CAAE;UAACe,OAAO,EAAEA,CAAA,KAAM;YAACjB,WAAW,CAACC,IAAI,CAAC;UAAA,CAAE;UAAAW,QAAA,EAAiBX,IAAI,CAACiB;QAAK,GAArBjB,IAAI,CAACQ,GAAG;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAmB;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAC3J,CAAC,CAAC,eACF5C,OAAA;MAAQ6C,QAAQ,EAAI3C,KAAK,CAACO,EAAE,GAAC,KAAK,GAAC,IAAK;MAAC8B,OAAO,EAAEA,CAAA,KAAM;QAACP,YAAY,CAAC9B,KAAK,CAACO,EAAE,CAAC;MAAA,CAAE;MAAAyB,QAAA,eAAClC,OAAA,CAACJ,UAAU;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACrG;AAEV;AAACzC,EAAA,CA5EQF,IAAI;EAAA,QAKIP,WAAW,EAoCNC,cAAc,EACVD,WAAW;AAAA;AAAAoD,EAAA,GA1C5B7C,IAAI;AA+Eb,eAAeA,IAAI;AAAC,IAAA6C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}