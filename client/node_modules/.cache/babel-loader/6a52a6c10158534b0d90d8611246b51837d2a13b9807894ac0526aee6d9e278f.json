{"ast":null,"code":"var _jsxFileName = \"D:\\\\TodoProject\\\\client\\\\src\\\\Note.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { deleteFromDb } from './api/DeleteToDO';\nimport { useMutation, useQueryClient } from '@tanstack/react-query';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { ListItemIcon } from \"@mui/material\";\nimport { updateToDo } from './api/UpdateToDo';\n\n// const [mutation] = useMutation(({data: elements}) => console.log(elements));\n// mutation({data: [1,2,3]});\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Note(props) {\n  _s();\n  const update = useMutation({\n    mutationFn: updateToDo,\n    // When mutate is called:\n    onMutate: async _ref => {\n      let {\n        todo,\n        pid\n      } = _ref;\n      console.log(todo, \"todoooo\", pid);\n      // Cancel any outgoing refetches\n      // (so they don't overwrite our optimistic update)\n      await queryClient.cancelQueries({\n        queryKey: ['todos', todo._id]\n      });\n\n      // Snapshot the previous value\n      const previousTodo = queryClient.getQueryData(['todos', todo._id]);\n\n      // Optimistically update to the new value\n      queryClient.setQueryData(['todos', todo._id, todo]);\n\n      // Return a context with the previous and new todo\n      return {\n        previousTodo,\n        todo\n      };\n    },\n    // If the mutation fails, use the context we returned above\n    onError: (err, newTodo, context) => {\n      queryClient.setQueryData(['todos', context.newTodo.id], context.previousTodo);\n    },\n    // Always refetch after error or success:\n    onSettled: newTodo => {\n      queryClient.invalidateQueries({\n        queryKey: ['todos', newTodo._id]\n      });\n    }\n  });\n  function handleClick(item, pid) {\n    console.log(item);\n    item.completed = !item.completed;\n    console.log(item);\n    update.mutate({\n      todo: item,\n      pid: pid\n    });\n  }\n  const queryClient = useQueryClient();\n  const addTodoMutation = useMutation({\n    mutationFn: deleteFromDb,\n    onMutate: async id => {\n      await queryClient.cancelQueries({\n        queryKey: ['todos']\n      });\n      const previousTodos = queryClient.getQueryData(['todos']);\n      queryClient.setQueryData(['todos'], old => old.filter(t => t._id !== id));\n      return {\n        previousTodos\n      };\n    },\n    onError: (err, newTodo, context) => {\n      queryClient.setQueryData(['todos'], context.previousTodos);\n    },\n    // Always refetch after error or success:\n    onSettled: () => {\n      queryClient.invalidateQueries({\n        queryKey: ['todos']\n      });\n    }\n  });\n  const handleDelete = id => {\n    addTodoMutation.mutate(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [props.note.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            textDecoration: item.completed ? \"line-through\" : \"none\"\n          },\n          onClick: () => {\n            handleClick(item, props.id);\n          },\n          children: [item.title, \" \"]\n        }, item._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 16\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: props.id ? false : true,\n      onClick: () => {\n        handleDelete(props.id);\n      },\n      children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 89\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(Note, \"O3bWDWdQiq2oPULa+7A6cduFVFE=\", false, function () {\n  return [useMutation, useQueryClient, useMutation];\n});\n_c = Note;\nexport default Note;\nvar _c;\n$RefreshReg$(_c, \"Note\");","map":{"version":3,"names":["React","deleteFromDb","useMutation","useQueryClient","DeleteIcon","ListItemIcon","updateToDo","jsxDEV","_jsxDEV","Note","props","_s","update","mutationFn","onMutate","_ref","todo","pid","console","log","queryClient","cancelQueries","queryKey","_id","previousTodo","getQueryData","setQueryData","onError","err","newTodo","context","id","onSettled","invalidateQueries","handleClick","item","completed","mutate","addTodoMutation","previousTodos","old","filter","t","handleDelete","className","children","note","map","style","textDecoration","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["D:/TodoProject/client/src/Note.js"],"sourcesContent":["import React from \"react\";\r\nimport {deleteFromDb} from './api/DeleteToDO';\r\nimport {useMutation,useQueryClient}  from '@tanstack/react-query';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { ListItemIcon } from \"@mui/material\";\r\nimport {updateToDo} from './api/UpdateToDo'\r\n\r\n\r\n// const [mutation] = useMutation(({data: elements}) => console.log(elements));\r\n// mutation({data: [1,2,3]});\r\nfunction Note(props) {\r\n \r\n  const update = useMutation({\r\n    mutationFn: updateToDo,\r\n    // When mutate is called:\r\n    onMutate: async ({todo,pid}) => {\r\n      console.log(todo,\"todoooo\",pid)\r\n    // Cancel any outgoing refetches\r\n      // (so they don't overwrite our optimistic update)\r\n      await queryClient.cancelQueries({ queryKey: ['todos', todo._id] })\r\n\r\n      // Snapshot the previous value\r\n      const previousTodo = queryClient.getQueryData(['todos',todo._id ])\r\n  \r\n      // Optimistically update to the new value\r\n      queryClient.setQueryData(['todos', todo._id,todo])\r\n  \r\n      // Return a context with the previous and new todo\r\n      return { previousTodo, todo }\r\n    },\r\n    // If the mutation fails, use the context we returned above\r\n    onError: (err, newTodo, context) => {\r\n      queryClient.setQueryData(\r\n        ['todos', context.newTodo.id],\r\n        context.previousTodo,\r\n      )\r\n    },\r\n    // Always refetch after error or success:\r\n    onSettled: (newTodo) => {\r\n      queryClient.invalidateQueries({ queryKey: ['todos', newTodo._id] })\r\n    \r\n    }})\r\n\r\n  function handleClick(item,pid) {\r\n    console.log(item)\r\n    item.completed = !(item.completed);\r\n    console.log(item)\r\n    update.mutate({todo:item,pid:pid})\r\n  }\r\n  \r\n  const queryClient = useQueryClient();\r\n  const addTodoMutation = useMutation({\r\n    mutationFn:  deleteFromDb,\r\n    onMutate: async (id) => {\r\n     await queryClient.cancelQueries({ queryKey: ['todos'] })\r\n     const previousTodos = queryClient.getQueryData(['todos'])\r\n    queryClient.setQueryData(['todos'], (old) => old.filter(t => t._id!==id))\r\n    return { previousTodos }\r\n  }, \r\n  onError: (err, newTodo, context) => {\r\n    queryClient.setQueryData(['todos'], context.previousTodos)\r\n  },\r\n  // Always refetch after error or success:\r\n  onSettled: () => {\r\n    queryClient.invalidateQueries({ queryKey: ['todos'] })\r\n    \r\n\r\n  },\r\n\r\n})\r\n  \r\nconst handleDelete = (id) => {\r\n  addTodoMutation.mutate(id)\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <div className=\"note\">\r\n      {  props.note.map((item) => {\r\n        return <ul> <li style = {{textDecoration:item.completed?\"line-through\":\"none\"}}  onClick={() => {handleClick(item,props.id)}} key={item._id} >{item.title} </li></ul>\r\n      })}\r\n      <button disabled = {props.id?false:true} onClick={() => {handleDelete(props.id)}}><DeleteIcon /></button>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Note;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}